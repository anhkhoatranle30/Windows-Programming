<Window x:Class="We_Split.SplashScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:We_Split"
        mc:Ignorable="d"
        Title="SplashScreen" Height="450" Width="800"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="White" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="White" />
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M12.676537,1.5569782 L5.9707563,11.579705 5.7462508,11.579705 0,6.6096673 1.6223967,4.4821 5.4073958,7.7487836 10.590248,1.9420291E-05 12.676537,1.5569782 z" Fill="{StaticResource OptionMark.Static.Glyph}"
                                           Opacity="0" Stretch="None" Height="11.2" Width="12.2" />
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="white" />
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="Images/backgroundSplashScreen.jpeg" Stretch="Fill" />
        </Grid.Background>
        <Border Margin="10" Background="Transparent" BorderThickness="2" BorderBrush="White">
            <Grid>
                <CheckBox x:Name="showSplashScreen" VerticalContentAlignment="Center" FontSize="16" Checked="showSplashScreen_Checked" Unchecked="showSplashScreen_Unchecked" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5" Background="Transparent" BorderThickness="1" BorderBrush="White" Content="Không hiện màn hình này mỗi khi khởi động" Foreground="White" Style="{DynamicResource CheckBoxStyle1}">
                    <CheckBox.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10" />
                            <Setter Property="Width" Value="20" />
                            <Setter Property="Height" Value="20" />
                        </Style>
                    </CheckBox.Resources>
                </CheckBox>
                <Grid>
                    <TextBlock Text="Welcome to We Split"
                               Foreground="White"
                               FontStyle="Italic"
                               FontSize="40"
                               FontWeight="DemiBold"
                               HorizontalAlignment="Center" Margin="0,20" />
                    <Border BorderThickness="0,3"  BorderBrush="WhiteSmoke" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock x:Name="infor1"
                                       Text=" asd asd asf asdf asdf asdf asd fasd fad fadsfad fa fd  fs asd ds dsff dss fas daf sdfa fas fd adf asdf asfd asf d dgsd gdf gdsfg ds gsdfg sdfgsdfg sd gsd"
                                       Foreground="WhiteSmoke"
                                       FontStyle="Italic"
                                       FontSize="16"
                                       FontWeight="DemiBold"
                                       Margin="8"
                                       TextWrapping="Wrap"
                                       TextAlignment="Justify"
                                       MaxWidth="600" />
                    </Border>
                </Grid>
                <Button x:Name="shutdownScreen" Click="shutdownScreen_Click"
                        Background="Transparent"
                        VerticalAlignment="Bottom" HorizontalAlignment="Right"
                        Content="Bỏ qua >"
                        BorderThickness="0"
                        FontSize="15"
                        Foreground="WhiteSmoke" Style="{DynamicResource ButtonStyle1}">
                </Button>
            </Grid>
        </Border>
    </Grid>
</Window>