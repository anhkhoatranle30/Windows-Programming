<Window x:Class="Project_1_Food_Recipe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project_1_Food_Recipe"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1280"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        Loaded="Window_Loaded">
    <Window.Icon>
        <BitmapImage UriSource="Images/icon.png" RenderOptions.BitmapScalingMode="HighQuality" />
    </Window.Icon>

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />

        <Style x:Key="EntryFieldStyle" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="fontStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily"
                    Value="Font/Poppins-Medium.ttf #Poppins" />
            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="Margin"
                    Value="17" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>

        <Style x:Key="foodNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily"
                    Value="Font/UtmTimes-xOlr.ttf #UtmTimes" />
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="FontSize"
                    Value="17" />
            <Setter Property="Padding"
                    Value="8" />
            <Setter Property="Margin"
                    Value="0,2,0,10" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>

        <Style x:Key="homeBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Width"
                    Value="100" />
            <Setter Property="Height"
                    Value="100" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="40"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            <Grid x:Name="img" Width="40" Height="40" Margin="30,25,30,35" Background="White">
                                <Grid.OpacityMask>
                                    <ImageBrush ImageSource="Images/img_home_default.png" />
                                </Grid.OpacityMask>
                            </Grid>
                            <TextBlock x:Name="text" Text="Home" Style="{StaticResource fontStyle}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White" />
                                <Setter TargetName="img" Property="Background" Value="{Binding Color}" />
                                <Setter TargetName="text" Property="Foreground" Value="{Binding Color}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="White"
                                                            To="#202020" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="#202020"
                                                            To="White" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="favoriteBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Width"
                    Value="100" />
            <Setter Property="Height"
                    Value="100" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="40"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            <Grid x:Name="img" Width="40" Height="40" Margin="30,25,30,35" Background="White">
                                <Grid.OpacityMask>
                                    <ImageBrush ImageSource="Images/img_favorite_default.png" />
                                </Grid.OpacityMask>
                            </Grid>
                            <TextBlock x:Name="text" Text="Favorite" Style="{StaticResource fontStyle}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White" />
                                <Setter TargetName="img" Property="Background" Value="{Binding Color}" />
                                <Setter TargetName="text" Property="Foreground" Value="{Binding Color}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="White"
                                                            To="#202020" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="#202020"
                                                            To="White" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="addBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Width"
                    Value="100" />
            <Setter Property="Height"
                    Value="100" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="40"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            <Grid x:Name="img" Width="40" Height="40" Margin="30,25,30,35" Background="White">
                                <Grid.OpacityMask>
                                    <ImageBrush ImageSource="Images/img_add_default.png" />
                                </Grid.OpacityMask>
                            </Grid>
                            <TextBlock x:Name="text" Text="Add" Style="{StaticResource fontStyle}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White" />
                                <Setter TargetName="img" Property="Background" Value="{Binding Color}" />
                                <Setter TargetName="text" Property="Foreground" Value="{Binding Color}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="White"
                                                            To="#202020" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="#202020"
                                                            To="White" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="settingBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Width"
                    Value="100" />
            <Setter Property="Height"
                    Value="100" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="40"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            <Grid x:Name="img" Width="40" Height="40" Margin="30,25,30,35" Background="White">
                                <Grid.OpacityMask>
                                    <ImageBrush ImageSource="Images/img_setting_default.png" />
                                </Grid.OpacityMask>
                            </Grid>
                            <TextBlock x:Name="text" Text="Setting" Style="{StaticResource fontStyle}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White" />
                                <Setter TargetName="img" Property="Background" Value="{Binding Color}" />
                                <Setter TargetName="text" Property="Foreground" Value="{Binding Color}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="White"
                                                            To="#202020" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" From="#202020"
                                                            To="White" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="aboutBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Width"
                    Value="40" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"
                                CornerRadius="40"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            <Grid x:Name="img" Width="20" Height="20" Background="White">
                                <Grid.OpacityMask>
                                    <ImageBrush ImageSource="Images/img_about.png" />
                                </Grid.OpacityMask>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White" />
                                <Setter TargetName="img" Property="Background" Value="{Binding Color}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:1" From="White"
                                                            To="#202020" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:1" From="#202020"
                                                            To="White" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region shutdown button -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="shutdownStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <Grid x:Name="img" Background="{Binding Color}">
                                <Grid.OpacityMask>
                                    <ImageBrush ImageSource="Images/img_shutdown.png" />
                                </Grid.OpacityMask>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region change color background -->
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD" />
            <Setter Property="BorderBrush" Value="#FF707070" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            <Grid Name="ticked" Background="White" Width="25" Height="25" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="Hidden">
                                <Image Source="Images/img_tick.png" VerticalAlignment="Top" HorizontalAlignment="Right" Stretch="Fill" Height="Auto" Margin="-5,-4,-4,-5" Width="34" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" TargetName="border" Value="2" />
                                <Setter Property="BorderBrush" TargetName="border" Value="black" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderThickness" TargetName="border" Value="2" />
                                <Setter Property="BorderBrush" TargetName="border" Value="black" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderThickness" TargetName="border" Value="2" />
                                <Setter Property="BorderBrush" TargetName="border" Value="black" />
                                <Setter Property="Visibility" TargetName="ticked" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <Style x:Key="watermarkTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="watermarkTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Margin" Value="0,7" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="Transparent" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#404040" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Color}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="watermarkSearchTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Margin" Value="0,7" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="Transparent" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#404040" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Color}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="addImageBtnStyle" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#404040" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding Color}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="foodBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Width"
                    Value="260" />
            <Setter Property="Height"
                    Value="190" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border"

                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />

                            <Border  CornerRadius="20"
                                     Width="250" Height="150"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     VerticalAlignment="Top"
                                     HorizontalAlignment="Center">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding DesPicture}" />
                                </Border.Background>
                            </Border>
                            <TextBlock Text="{Binding Title}" Style="{StaticResource foodNameStyle}" Margin="0,4" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0C0C0" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:1" From="#C0C0C0"
                                                            To="#606060" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:1" From="#606060"
                                                            To="#C0C0C0" Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="Background.Color"
                                                            AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Background="{TemplateBinding Background}"
                                                            SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                          VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
        <Style x:Key="Page1BtnStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">

                            <Border x:Name="radioButtonBorder" CornerRadius="40" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="40" Width="40">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0" />
                                    <TextBlock x:Name="pageNumber" Text="1" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{Binding Color}" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" TargetName="pageNumber" Value="white" />
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Color}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Color}" />
                                <Setter Property="Foreground" TargetName="pageNumber" Value="white" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="white" />
                                <Setter Property="Foreground" TargetName="pageNumber" Value="{Binding Color}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Page2BtnStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource Page1BtnStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">

                            <Border x:Name="radioButtonBorder" CornerRadius="40" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="40" Width="40">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0" />
                                    <TextBlock x:Name="pageNumber" Text="2" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{Binding Color}" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" TargetName="pageNumber" Value="white" />
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Color}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Color}" />
                                <Setter Property="Foreground" TargetName="pageNumber" Value="white" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="white" />
                                <Setter Property="Foreground" TargetName="pageNumber" Value="{Binding Color}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Page3BtnStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource Page1BtnStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">

                            <Border x:Name="radioButtonBorder" CornerRadius="40" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="40" Width="40">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0" />
                                    <TextBlock x:Name="pageNumber" Text="3" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{Binding Color}" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" TargetName="pageNumber" Value="white" />
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Color}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Color}" />
                                <Setter Property="Foreground" TargetName="pageNumber" Value="white" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="white" />
                                <Setter Property="Foreground" TargetName="pageNumber" Value="{Binding Color}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border CornerRadius="40" Background="{Binding Color}">

        <Grid>
            <WrapPanel>

                <!--#region menu -->
                <Grid Width="120" Height="800">
                    <Border Width="60" Height="60" CornerRadius="10" Background="White" Canvas.Left="30" Canvas.Top="19" Margin="29,46,31,694">
                        <Canvas>
                            <Image Source="Images/img_user.png" Height="60" Width="60" />
                            <Border HorizontalAlignment="Center" Canvas.Left="-28" Canvas.Top="65" VerticalAlignment="Center" Width="117">
                                <TextBlock x:Name="userName" Style="{StaticResource fontStyle}" Text="Hi!" Canvas.Top="81" Foreground="White" FontSize="23" Margin="0" Canvas.Left="-27" />
                            </Border>
                        </Canvas>
                    </Border>

                    <Grid Width="120" Height="450" Canvas.Top="210">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="9*" />
                        </Grid.RowDefinitions>

                        <StackPanel Margin="0,-1,0,-32.4" Grid.RowSpan="2">

                            <Button x:Name="homeBtn" Style="{StaticResource homeBtnStyle}"  Click="homeBtn_Click" IsDefault="True" />
                            <Button x:Name="favoriteBtn" Style="{StaticResource favoriteBtnStyle}"  Click="favoriteBtn_Click" />
                            <Button x:Name="addBtn" Style="{StaticResource addBtnStyle}"  Click="addBtn_Click" />
                            <Button x:Name="settingBtn" Style="{DynamicResource settingBtnStyle}" Click="settingBtn_Click" />
                        </StackPanel>
                    </Grid>

                    <Button x:Name="aboutBtn" Style="{StaticResource aboutBtnStyle}" Click="aboutBtn_Click" Margin="10,658,10,42" />
                </Grid>
                <!--#endregion-->

                <Border Background="White" Height="800" Width="1160" CornerRadius="40">
                    <Grid Margin="35,55">

                        <Grid x:Name="homeScreen">

                            <Grid x:Name="searchGrid" Style="{StaticResource EntryFieldStyle}" Height="59" Margin="117,10,121.6,620.6" Width="851">
                                <Image Source="Images/img_search.png" HorizontalAlignment="Left" Margin="10,14,0,10" Width="31" VerticalAlignment="Center" Height="35" />
                                <TextBlock x:Name="searchWatermark"
                                           Text="Search"
                                           Margin="41,6,10,5"
                                           Style="{StaticResource watermarkTextBlockStyle}"
                                           Visibility="{Binding ElementName=search, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <TextBox x:Name="search" Style="{StaticResource watermarkSearchTextBoxStyle}" Padding="46,5,0,5" />
                            </Grid>

                            <ListView x:Name="dataListView" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" Margin="0,74,-0.4,36.6">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Button Style="{StaticResource foodBtnStyle}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <Grid x:Name="page" Margin="718,650,-0.4,-24.4">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <RadioButton x:Name="page1" IsChecked="True" GroupName="page" Style="{DynamicResource Page1BtnStyle}" />
                                    <RadioButton x:Name="page2" GroupName="page"  Style="{DynamicResource Page2BtnStyle}" />
                                    <RadioButton x:Name="page3" GroupName="page"  Style="{DynamicResource Page3BtnStyle}" />
                                </StackPanel>
                            </Grid>
                        </Grid>

                        <Grid x:Name="favoriteScreen"  Visibility="Hidden">

                            <ListView x:Name="favoriteListView" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Button Style="{StaticResource foodBtnStyle}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>

                        <Grid x:Name="addScreen" Visibility="Hidden">

                            <Grid x:Name="titleGrid" Style="{StaticResource EntryFieldStyle}" Width="394" Height="55" Margin="0,0,695.6,634.6">

                                <TextBlock x:Name="titleWatermark"
                                           Text="Title"
                                           Margin="-1,4"
                                           Style="{StaticResource watermarkTextBlockStyle}"
                                           Visibility="{Binding ElementName=title, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <TextBox x:Name="title" Style="{StaticResource watermarkTextBoxStyle}" />
                            </Grid>

                            <Grid x:Name="descriptionGrid" Style="{StaticResource EntryFieldStyle}" Width="394" Height="253" Margin="0,55,695.6,381.6">

                                <TextBlock x:Name="descriptionWatermark"
                                           Text="Description"
                                           Margin="-1,4"
                                           Style="{StaticResource watermarkTextBlockStyle}"
                                           Visibility="{Binding ElementName=description, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <TextBox x:Name="description" Style="{StaticResource watermarkTextBoxStyle}"
                                         AcceptsReturn="True" TextWrapping="Wrap" />
                            </Grid>

                            <Grid x:Name="youtubeLinkGrid" Style="{StaticResource EntryFieldStyle}" Width="394" Height="55" Margin="0,313,695.6,321.6">

                                <TextBlock x:Name="ytWatermark"
                                           Text="Youtube Link"
                                           Margin="-1,4"
                                           Style="{StaticResource watermarkTextBlockStyle}"
                                           Visibility="{Binding ElementName=yt, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <TextBox x:Name="yt" Style="{StaticResource watermarkTextBoxStyle}" />
                            </Grid>

                            <Grid x:Name="addImageGrid" Style="{StaticResource EntryFieldStyle}"  Width="394" Height="312" Margin="0,373,695.6,4.6">

                                <Button x:Name="addImgBtn" Background="Transparent"
                                        BorderBrush="Gray"
                                        BorderThickness="3"
                                        VerticalAlignment="Bottom" Template="{DynamicResource addImageBtnStyle}"
                                        Click="addImgBtn_Click">
                                    <Button.Content>
                                        <Grid Height="300" VerticalAlignment="Bottom" Width="384">
                                            <Grid Background="#808080" Opacity="0.6" Margin="0,238,0,0">
                                                <Image Source="Images/img_add_img.png" VerticalAlignment="top" Width="40" Height="40" />
                                                <TextBlock Text="Click to add image" FontSize="13" Foreground="White" Margin="137,40,140,0" />
                                            </Grid>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </Grid>

                            <Grid x:Name="stepDescriptionGrid" Style="{StaticResource EntryFieldStyle}" Width="317" Height="255" Margin="417,0,355.6,434.6">

                                <TextBlock x:Name="stepDescriptionWatermark"
                                           Text="Step Description"
                                           Margin="-1,4"
                                           Style="{StaticResource watermarkTextBlockStyle}"
                                           Visibility="{Binding ElementName=stepDescription, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <TextBox x:Name="stepDescription" Style="{StaticResource watermarkTextBoxStyle}"
                                         AcceptsReturn="True" TextWrapping="Wrap" />
                            </Grid>

                            <Grid x:Name="addStepImageGrid" Style="{StaticResource EntryFieldStyle}"  Width="334" Height="257" Margin="756,-2,-0.4,434.6">

                                <Button x:Name="addStepImgBtn" Background="Transparent"
                                        BorderBrush="Gray"
                                        BorderThickness="3"
                                        VerticalAlignment="Bottom" Template="{DynamicResource addImageBtnStyle}"
                                        Click="addStepImgBtn_Click" Height="237" Margin="0,0,0,10">
                                    <Button.Content>
                                        <Grid Height="295" VerticalAlignment="Bottom" Width="324">
                                            <Image x:Name="stepImage" Margin="0,69,0,0" Stretch="Fill" />

                                            <Grid Background="#808080" Opacity="0.6" Margin="0,238,0,0">
                                                <Image Source="Images/img_add_img.png" VerticalAlignment="top" Width="40" Height="40" />
                                                <TextBlock Text="Click to add step images" FontSize="13" Foreground="White" Margin="91,38,89,-0.2" />
                                            </Grid>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </Grid>

                            <Button x:Name="addStepBtn" Click="addStepBtn_Click" Margin="702,254,301.6,369.6" Background="Gray">
                                <Button.Content>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*" />
                                            <RowDefinition Height="52*" />
                                        </Grid.RowDefinitions>
                                        <Image Source="Images/img_add_step.png" Margin="6,5,3.8,21.2" Grid.RowSpan="2" />
                                        <TextBlock Text="Add Step" Style="{StaticResource foodNameStyle}" Margin="0,0,-0.2,-6.8" Grid.Row="1" />
                                    </Grid>
                                </Button.Content>
                            </Button>

                            <Border Margin="417,325,-0.4,4.6" BorderThickness="3" BorderBrush="Gray" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                <Grid x:Name="stepViewGrid">
                                    <ScrollViewer>
                                        <ListView x:Name="allStepListView">
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel />
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel ScrollViewer.VerticalScrollBarVisibility="Visible">
                                                        <TextBlock x:Name="numberOfStep"
                                                                   FontFamily="Font/UtmTimes-xOlr.ttf #UtmTimes"
                                                                   Padding="10"
                                                                   FontSize="20"
                                                                   Foreground="Red"
                                                                   FontWeight="Bold"
                                                                   Height="46"
                                                                   Margin="0,0,0.2,0"
                                                                   Text="{Binding NumberOfStep}" />
                                                        <TextBlock x:Name="stepDesc"
                                                                   FontFamily="Font/UtmTimes-xOlr.ttf #UtmTimes"
                                                                   TextWrapping="Wrap"
                                                                   Padding="10"
                                                                   FontSize="20"
                                                                   Text="{Binding StepDesc}" />
                                                        <Image Source="{Binding StepPathImage}" Width="150" Height="150" Stretch="Fill" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </ScrollViewer>
                                </Grid>
                            </Border>

                            <Button x:Name="saveAddBtn" Margin="792,697,210.6,-35.4" Background="Transparent" Click="saveAddBtn_Click">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Images/img_save_add.png" />
                                        <TextBlock Text="Save" FontSize="18" Padding="9,0,2,9" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button x:Name="cancelAddBtn" Margin="924,697,75.6,-35.4" Background="Transparent" Click="cancelAddBtn_Click">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Images/img_cancel_add.png" />
                                        <TextBlock Text="Cancel" FontSize="18" Padding="9,0,2,9" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </Grid>

                        <Grid x:Name="settingScreen" Visibility="Hidden">
                            <StackPanel>
                                <TextBlock Text="Choose your background color:" Style="{StaticResource fontStyle}" Foreground="Black"
                                       VerticalAlignment="Top" HorizontalAlignment="Left"
                                       FontSize="20" />
                                <WrapPanel>
                                    <RadioButton GroupName="colorBg" Name="defaultColor"  Background="#3498DB" Style="{DynamicResource RadioButtonStyle}"  Margin="10" Checked="defaultColor_Checked" />
                                    <RadioButton GroupName="colorBg" Name="redColor" Background="Red" Style="{DynamicResource RadioButtonStyle}"  Margin="10" Checked="redColor_Checked" />
                                    <RadioButton GroupName="colorBg" Name="blueColor"  Background="Blue" Style="{DynamicResource RadioButtonStyle}" Margin="10" Checked="blueColor_Checked" />
                                    <RadioButton GroupName="colorBg" Name="yellowColor"  Background="Yellow" Style="{DynamicResource RadioButtonStyle}" Margin="10" Checked="yellowColor_Checked" />
                                    <RadioButton GroupName="colorBg" Name="greenColor" Background="Green" Style="{DynamicResource RadioButtonStyle}" Margin="10" Checked="greenColor_Checked" />
                                </WrapPanel>
                            </StackPanel>
                        </Grid>

                        <Grid x:Name="aboutScreen" Visibility="Hidden">
                            <StackPanel Margin="10">
                                <Grid Background="Transparent" Height="352" Margin="0,0,105.6,0">
                                    <Image Source="Images/img_about_Khoa.jpg" Margin="0,0,642,0" />
                                    <StackPanel HorizontalAlignment="Left" Margin="384,10,0,-10">
                                        <TextBlock Text="Name: Trần Lê Anh Khoa"
                                                   FontSize="26"
                                                   Padding="10"
                                                   HorizontalAlignment="Left"
                                                   Style="{StaticResource foodNameStyle}" />
                                        <TextBlock Text="MSSV: 18120421"
                                                   FontSize="26"
                                                   Padding="10"
                                                   HorizontalAlignment="Left"
                                                   Style="{StaticResource foodNameStyle}" />
                                        <TextBlock Text="Email: 18120421@student.hcmus.edu.vn"
                                                   FontSize="26"
                                                   Padding="10"
                                                   HorizontalAlignment="Left"
                                                   Style="{StaticResource foodNameStyle}" />
                                    </StackPanel>
                                </Grid>

                                <Grid Background="Transparent" Height="339" Margin="0,0,105.6,0">
                                    <Image  Margin="0,0,642,0" />
                                    <StackPanel HorizontalAlignment="Left" Margin="384,10,0,-10">
                                        <TextBlock Text="Name:Võ Nguyễn Lê Hoàng "
                                                   FontSize="26"
                                                   Padding="10"
                                                   HorizontalAlignment="Left"
                                                   Style="{StaticResource foodNameStyle}" />
                                        <TextBlock Text="MSSV: 18120388"
                                                   FontSize="26"
                                                   Padding="10"
                                                   HorizontalAlignment="Left"
                                                   Style="{StaticResource foodNameStyle}" />
                                        <TextBlock Text="Email: 18120388@student.hcmus.edu.vn"
                                                   FontSize="26"
                                                   Padding="10"
                                                   HorizontalAlignment="Left"
                                                   Style="{StaticResource foodNameStyle}" />
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Grid>

                        <Button Name="shuwdownBtn" Click="shuwdownBtn_Click" Width="25" Height="25" BorderThickness="0" Background="Transparent" Margin="1065,-37,-10,702" Style="{DynamicResource shutdownStyle}">
                        </Button>
                    </Grid>
                </Border>
            </WrapPanel>
        </Grid>
    </Border>
</Window>